# --------------------,V
,V
alias designvision="design_vision-xg -64bit",V
alias dcshell="dc_shell-xg-t -64bit -topographical_mode",V
# -----------------------------,V
# Alias,V
# Display the real path for pwd,V
alias pwd2="cd \`readlink -f .\`",V
# If not running interactively, don't do anything[ -z "$PS1" ] && return,V
#alias finder="gnome-open",V
# Unix only,V
# Mac onlyalias EE="cd ~/Documents/School/EE",V
# Quicker machine changealias cory="ssh -X -Y cory.eecs.berkeley.edu"alias c199="ssh -X -Y c199.eecs.berkeley.edu"alias bwrc="ssh -X -Y intel2950-4.eecs.berkeley.edu"alias cs250="ssh -X -Y icluster20.eecs.berkeley.edu"alias isis="ssh -X -Y isis-1.eecs.berkeley.edu",V
/etc/bash_completion,v
n,v
o,v
i,v
t,v
e,v
l,v
p,v
m,v
c,v
_,v
h,v
s,v
a,v
b,v
/,v
if [ -f /etc/bash_completion ]; then    . /etc/bash_completionfi,V
" TODO,V
            nmap <leader>gs :Gstatus<cr>            nmap <leader>gc :Gcommit<cr>            nmap <leader>ga :Gwrite<cr>            nmap <leader>gl :Glog<cr>            nmap <leader>gd :Gdiff<cr>,V
endif,V
    let &statusline='%< %f %{fugitive#statusline()} ... (other stuff)',V
if exists('*fugitive#statusline'),V
runtime! bundle/fugitive/autoload/fugitive.vim,V
 ,v
if has('statusline')        set laststatus=2        " Broken down into easily includeable segments        set statusline=%<%f\   " Filename        set statusline+=%w%h%m%r " Options        set statusline+=%{fugitive#statusline()} "  Git Hotness        "set statusline+=\ [%{&ff}/%Y]            " filetype        set statusline+=\ [%{getcwd()}]          " current dir        "set statusline+=\ [A=\%03.3b/H=\%02.2B] " ASCII / Hexadecimal value of char        set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info    endif,V
runtime! autoload/fugitive.vimif exists('*fugitive#statusline')    let &statusline='%< %f %{fugitive#statusline()} ... (other stuff)'endif,V
if has('statusline')        set laststatus=2        " Broken down into easily includeable segments        set statusline=%<%f\   " Filename        set statusline+=%w%h%m%r " Options        set statusline+=%{fugitive#statusline()} "  Git Hotness        set statusline+=\ [%{&ff}/%Y]            " filetype        set statusline+=\ [%{getcwd()}]          " current dir        "set statusline+=\ [A=\%03.3b/H=\%02.2B] " ASCII / Hexadecimal value of char        set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info    endif,V
" -------------------,V
" ================,V
" ===========,V
" =================,V
" =============,V
" ===============,V
" =====================,V
" ==================,V
http://github.github.com/github-flavored-markdown/sample_content.html,v
afterdocftdetectftpluginindentREADMEsyntax,V
export PATH=/opt/local/bin:/opt/local/sbin:$PATH,V
alias EE="cd ~/Documents/School/EE",V
fakeclip.vim,v
" Load pathogen to manage pluginsfiletype offcall pathogen#runtime_append_all_bundles()filetype plugin indent on,V
",V
slime.txt,v
set list listchars=tab:\ \ ,trail:Â·,v
testtest,V
#,v
alias finder="gnome-open",V
 --color=auto,v
 --color,v
r,v
-,v
--color" # normal color,v
 =,v
"set backupdir=~/.backup/,V
"set directory=~/.backup/,V
set showmode,V
set hidden,V
" Turn on auto indentationset autoindent,V
" Leader shortcuts,V
		" Something,V
" noremap <leader>y :CommandTFlush<cr>,V
" noremap <leader>j :CommandT<cr>,V
" set wildignore+=*.o,*.obj,.git,*.pyc,V
" let g:CommandTMaxHeight = 15,V
" """""""""""""""""""""""""""""",V
" " => Command-T,V
" map <leader>f :MRU<CR>,V
" let MRU_Max_Entries = 400,V
" => MRU plugin,V
"""""""""""""""""""""""""""""",V
set scrolloff=3,V
 <letter> (backtick will return),v
" ` <letter> (backtick will return),V
end,V
	end,V
		something,V
	something,V
for,V
iab xdate <c-r>=strftime("%d/%m/%y %H:%M:%S")<cr>,V
02/06/11 13:43:06,v
02/06/11 13:42:55,V
02/06/11 13:42:51,V
map <leader>tc :tabclose<cr>,V
map <leader>tm :tabmove,V
",v
" Plugin: SnipMate  ,V
" => Command-T,V
